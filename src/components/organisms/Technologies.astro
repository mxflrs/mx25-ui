---
import type { ICategory } from '../../core/interfaces/category.interface';
import Container from '../molecule/Container.astro';
interface Props {
    categories: ICategory[];
}
const { categories }: Props = Astro.props;
---

<Container title="Technologies I use">
    <div class="grid xl:grid-cols-5 gap-4 md:grid-cols-3 grid-cols-2">
        {
            categories.map((c, index) => (
                <div class="relative">
                    <button
                        class="flex flex-wrap py-2 px-4 w-full rounded-b-md items-center hover:rounded-lg border-white justify-between hover:border-mx-dark hover:bg-white dark:hover:bg-mx-purple category-toggle group relative"
                        data-index={index}
                    >
                        <div class="flex gap-4 items-center">
                            <i class={c.icon} />
                            <p class="font-bold">{c.category}</p>
                        </div>
                        <i class="ri-arrow-down-s-line text-mx-purple group-hover:text-mx-blue dark:text-mx-lila" />
                    </button>

                    {/* CONTENT */}
                    <div
                        class={`transition-all duration-300 ease-in-out hidden category-content absolute w-full top-8 left-0 z-20`}
                        data-index={index}
                    >
                        <div class="p-8 flex flex-col gap-6 bg-white mt-4 rounded-md">
                            {c.focus.map((f) => (
                                <div class="flex items-start gap-4 flex-col">
                                    <div class="flex gap-4 items-center">
                                        <p class="italic dark:text-mx-dark">
                                            {f.title}
                                        </p>
                                        <i class="ri-corner-right-down-line text-mx-purple dark:text-mx-lila" />
                                    </div>
                                    <div class="flex gap-2 flex-wrap">
                                        {/* TECHNOLOGIES */}
                                        {f.technologies.map((ft) => (
                                            <p class="text-xs px-3 py-1 rounded-2xl bg-mx-light text-mx-purple dark:bg-mx-lila dark:text-mx-dark font-semibold">
                                                {ft.technology}
                                            </p>
                                        ))}
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            ))
        }
    </div>
</Container>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        let openIndex = null; // Track the currently open category index

        const toggles = document.querySelectorAll('.category-toggle');

        toggles.forEach((toggle) => {
            toggle.addEventListener('click', () => {
                const index = toggle.getAttribute('data-index');
                const content = document.querySelector(
                    `.category-content[data-index="${index}"]`
                );

                // If the clicked category is already open, close it
                if (openIndex === index) {
                    content.classList.toggle('hidden');
                    openIndex = null; // Reset openIndex
                } else {
                    // Close the previously opened category
                    if (openIndex !== null) {
                        const previousContent = document.querySelector(
                            `.category-content[data-index="${openIndex}"]`
                        );
                        previousContent.classList.add('hidden'); // Hide previous content
                    }
                    content.classList.remove('hidden'); // Show the current content
                    openIndex = index; // Update openIndex to the currently opened category
                }
            });
        });
    });
</script>
